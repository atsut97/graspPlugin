// This file is generated by omniidl (C++ backend) - omniORB_4_1. Do not edit.

#include "GraspPathController.hh"

OMNI_USING_NAMESPACE(omni)

static const char* _0RL_dyn_library_version = omniORB_4_1_dyn;

static ::CORBA::TypeCode::_Tracker _0RL_tcTrack(__FILE__);

static CORBA::TypeCode_ptr _0RL_tc_planGraspPath_mDblSeq3 = CORBA::TypeCode::PR_alias_tc("IDL:planGraspPath/DblSeq3:1.0", "DblSeq3", CORBA::TypeCode::PR_sequence_tc(3, CORBA::TypeCode::PR_double_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


const CORBA::TypeCode_ptr planGraspPath::_tc_DblSeq3 = _0RL_tc_planGraspPath_mDblSeq3;

static CORBA::TypeCode_ptr _0RL_tc_planGraspPath_mDblSeq9 = CORBA::TypeCode::PR_alias_tc("IDL:planGraspPath/DblSeq9:1.0", "DblSeq9", CORBA::TypeCode::PR_sequence_tc(9, CORBA::TypeCode::PR_double_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


const CORBA::TypeCode_ptr planGraspPath::_tc_DblSeq9 = _0RL_tc_planGraspPath_mDblSeq9;

static CORBA::TypeCode_ptr _0RL_tc_planGraspPath_mDblSeq = CORBA::TypeCode::PR_alias_tc("IDL:planGraspPath/DblSeq:1.0", "DblSeq", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_double_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


const CORBA::TypeCode_ptr planGraspPath::_tc_DblSeq = _0RL_tc_planGraspPath_mDblSeq;

static CORBA::TypeCode_ptr _0RL_tc_planGraspPath_mLngSeq = CORBA::TypeCode::PR_alias_tc("IDL:planGraspPath/LngSeq:1.0", "LngSeq", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


const CORBA::TypeCode_ptr planGraspPath::_tc_LngSeq = _0RL_tc_planGraspPath_mLngSeq;

static CORBA::TypeCode_ptr _0RL_tc_planGraspPath_mULONG = CORBA::TypeCode::PR_alias_tc("IDL:planGraspPath/ULONG:1.0", "ULONG", CORBA::TypeCode::PR_ulong_tc(), &_0RL_tcTrack);


const CORBA::TypeCode_ptr planGraspPath::_tc_ULONG = _0RL_tc_planGraspPath_mULONG;

static const char* _0RL_enumMember_planGraspPath_mMotionState[] = { "APROACH", "BACKAWAY", "CLOSING_GRIPPER", "OPENING_GRIPPER", "UP_HAND", "DOWN_HAND" };
static CORBA::TypeCode_ptr _0RL_tc_planGraspPath_mMotionState = CORBA::TypeCode::PR_enum_tc("IDL:planGraspPath/MotionState:1.0", "MotionState", _0RL_enumMember_planGraspPath_mMotionState, 6, &_0RL_tcTrack);
const CORBA::TypeCode_ptr planGraspPath::_tc_MotionState = _0RL_tc_planGraspPath_mMotionState;

static const char* _0RL_enumMember_planGraspPath_mObjectInputMode[] = { "CREATE_RECORD", "REMOVE_RECORD", "APPEAR", "DISAPPEAR", "SETPOS", "SET_TOLERANCE" };
static CORBA::TypeCode_ptr _0RL_tc_planGraspPath_mObjectInputMode = CORBA::TypeCode::PR_enum_tc("IDL:planGraspPath/ObjectInputMode:1.0", "ObjectInputMode", _0RL_enumMember_planGraspPath_mObjectInputMode, 6, &_0RL_tcTrack);
const CORBA::TypeCode_ptr planGraspPath::_tc_ObjectInputMode = _0RL_tc_planGraspPath_mObjectInputMode;

static CORBA::PR_structMember _0RL_structmember_planGraspPath_mManipInfo[] = {
  {"pos", _0RL_tc_planGraspPath_mDblSeq},
  {"state", _0RL_tc_planGraspPath_mMotionState},
  {"leftArm", CORBA::TypeCode::PR_boolean_tc()},
  {"rightArm", CORBA::TypeCode::PR_boolean_tc()},
  {"leftGripper", CORBA::TypeCode::PR_boolean_tc()},
  {"rightGripper", CORBA::TypeCode::PR_boolean_tc()},
  {"waist", CORBA::TypeCode::PR_boolean_tc()}
};

#ifdef _0RL_tc_planGraspPath_mManipInfo
#  undef _0RL_tc_planGraspPath_mManipInfo
#endif
static CORBA::TypeCode_ptr _0RL_tc_planGraspPath_mManipInfo = CORBA::TypeCode::PR_struct_tc("IDL:planGraspPath/ManipInfo:1.0", "ManipInfo", _0RL_structmember_planGraspPath_mManipInfo, 7, &_0RL_tcTrack);

const CORBA::TypeCode_ptr planGraspPath::_tc_ManipInfo = _0RL_tc_planGraspPath_mManipInfo;


static CORBA::PR_structMember _0RL_structmember_planGraspPath_mObjectInfo[] = {
  {"pos", _0RL_tc_planGraspPath_mDblSeq3},
  {"ori", _0RL_tc_planGraspPath_mDblSeq9},
  {"objId", _0RL_tc_planGraspPath_mULONG},
  {"tagId", CORBA::TypeCode::PR_string_tc(0, &_0RL_tcTrack)},
  {"tolerance", CORBA::TypeCode::PR_double_tc()}
};

#ifdef _0RL_tc_planGraspPath_mObjectInfo
#  undef _0RL_tc_planGraspPath_mObjectInfo
#endif
static CORBA::TypeCode_ptr _0RL_tc_planGraspPath_mObjectInfo = CORBA::TypeCode::PR_struct_tc("IDL:planGraspPath/ObjectInfo:1.0", "ObjectInfo", _0RL_structmember_planGraspPath_mObjectInfo, 5, &_0RL_tcTrack);

const CORBA::TypeCode_ptr planGraspPath::_tc_ObjectInfo = _0RL_tc_planGraspPath_mObjectInfo;






static CORBA::TypeCode_ptr _0RL_tc_planGraspPath_mManipInfoSeq = CORBA::TypeCode::PR_alias_tc("IDL:planGraspPath/ManipInfoSeq:1.0", "ManipInfoSeq", CORBA::TypeCode::PR_sequence_tc(0, _0RL_tc_planGraspPath_mManipInfo, &_0RL_tcTrack), &_0RL_tcTrack);


const CORBA::TypeCode_ptr planGraspPath::_tc_ManipInfoSeq = _0RL_tc_planGraspPath_mManipInfoSeq;

const CORBA::TypeCode_ptr _tc_planGraspPath = CORBA::TypeCode::PR_interface_tc("IDL:planGraspPath:1.0", "planGraspPath", &_0RL_tcTrack);

static void _0RL_planGraspPath_mDblSeq3_marshal_fn(cdrStream& _s, void* _v)
{
  planGraspPath::DblSeq3* _p = (planGraspPath::DblSeq3*)_v;
  *_p >>= _s;
}
static void _0RL_planGraspPath_mDblSeq3_unmarshal_fn(cdrStream& _s, void*& _v)
{
  planGraspPath::DblSeq3* _p = new planGraspPath::DblSeq3;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_planGraspPath_mDblSeq3_destructor_fn(void* _v)
{
  planGraspPath::DblSeq3* _p = (planGraspPath::DblSeq3*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const planGraspPath::DblSeq3& _s)
{
  planGraspPath::DblSeq3* _p = new planGraspPath::DblSeq3(_s);
  _a.PR_insert(_0RL_tc_planGraspPath_mDblSeq3,
               _0RL_planGraspPath_mDblSeq3_marshal_fn,
               _0RL_planGraspPath_mDblSeq3_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, planGraspPath::DblSeq3* _sp)
{
  _a.PR_insert(_0RL_tc_planGraspPath_mDblSeq3,
               _0RL_planGraspPath_mDblSeq3_marshal_fn,
               _0RL_planGraspPath_mDblSeq3_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, planGraspPath::DblSeq3*& _sp)
{
  return _a >>= (const planGraspPath::DblSeq3*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const planGraspPath::DblSeq3*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_planGraspPath_mDblSeq3,
                    _0RL_planGraspPath_mDblSeq3_unmarshal_fn,
                    _0RL_planGraspPath_mDblSeq3_marshal_fn,
                    _0RL_planGraspPath_mDblSeq3_destructor_fn,
                    _v)) {
    _sp = (const planGraspPath::DblSeq3*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_planGraspPath_mDblSeq9_marshal_fn(cdrStream& _s, void* _v)
{
  planGraspPath::DblSeq9* _p = (planGraspPath::DblSeq9*)_v;
  *_p >>= _s;
}
static void _0RL_planGraspPath_mDblSeq9_unmarshal_fn(cdrStream& _s, void*& _v)
{
  planGraspPath::DblSeq9* _p = new planGraspPath::DblSeq9;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_planGraspPath_mDblSeq9_destructor_fn(void* _v)
{
  planGraspPath::DblSeq9* _p = (planGraspPath::DblSeq9*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const planGraspPath::DblSeq9& _s)
{
  planGraspPath::DblSeq9* _p = new planGraspPath::DblSeq9(_s);
  _a.PR_insert(_0RL_tc_planGraspPath_mDblSeq9,
               _0RL_planGraspPath_mDblSeq9_marshal_fn,
               _0RL_planGraspPath_mDblSeq9_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, planGraspPath::DblSeq9* _sp)
{
  _a.PR_insert(_0RL_tc_planGraspPath_mDblSeq9,
               _0RL_planGraspPath_mDblSeq9_marshal_fn,
               _0RL_planGraspPath_mDblSeq9_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, planGraspPath::DblSeq9*& _sp)
{
  return _a >>= (const planGraspPath::DblSeq9*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const planGraspPath::DblSeq9*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_planGraspPath_mDblSeq9,
                    _0RL_planGraspPath_mDblSeq9_unmarshal_fn,
                    _0RL_planGraspPath_mDblSeq9_marshal_fn,
                    _0RL_planGraspPath_mDblSeq9_destructor_fn,
                    _v)) {
    _sp = (const planGraspPath::DblSeq9*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_planGraspPath_mDblSeq_marshal_fn(cdrStream& _s, void* _v)
{
  planGraspPath::DblSeq* _p = (planGraspPath::DblSeq*)_v;
  *_p >>= _s;
}
static void _0RL_planGraspPath_mDblSeq_unmarshal_fn(cdrStream& _s, void*& _v)
{
  planGraspPath::DblSeq* _p = new planGraspPath::DblSeq;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_planGraspPath_mDblSeq_destructor_fn(void* _v)
{
  planGraspPath::DblSeq* _p = (planGraspPath::DblSeq*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const planGraspPath::DblSeq& _s)
{
  planGraspPath::DblSeq* _p = new planGraspPath::DblSeq(_s);
  _a.PR_insert(_0RL_tc_planGraspPath_mDblSeq,
               _0RL_planGraspPath_mDblSeq_marshal_fn,
               _0RL_planGraspPath_mDblSeq_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, planGraspPath::DblSeq* _sp)
{
  _a.PR_insert(_0RL_tc_planGraspPath_mDblSeq,
               _0RL_planGraspPath_mDblSeq_marshal_fn,
               _0RL_planGraspPath_mDblSeq_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, planGraspPath::DblSeq*& _sp)
{
  return _a >>= (const planGraspPath::DblSeq*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const planGraspPath::DblSeq*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_planGraspPath_mDblSeq,
                    _0RL_planGraspPath_mDblSeq_unmarshal_fn,
                    _0RL_planGraspPath_mDblSeq_marshal_fn,
                    _0RL_planGraspPath_mDblSeq_destructor_fn,
                    _v)) {
    _sp = (const planGraspPath::DblSeq*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_planGraspPath_mLngSeq_marshal_fn(cdrStream& _s, void* _v)
{
  planGraspPath::LngSeq* _p = (planGraspPath::LngSeq*)_v;
  *_p >>= _s;
}
static void _0RL_planGraspPath_mLngSeq_unmarshal_fn(cdrStream& _s, void*& _v)
{
  planGraspPath::LngSeq* _p = new planGraspPath::LngSeq;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_planGraspPath_mLngSeq_destructor_fn(void* _v)
{
  planGraspPath::LngSeq* _p = (planGraspPath::LngSeq*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const planGraspPath::LngSeq& _s)
{
  planGraspPath::LngSeq* _p = new planGraspPath::LngSeq(_s);
  _a.PR_insert(_0RL_tc_planGraspPath_mLngSeq,
               _0RL_planGraspPath_mLngSeq_marshal_fn,
               _0RL_planGraspPath_mLngSeq_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, planGraspPath::LngSeq* _sp)
{
  _a.PR_insert(_0RL_tc_planGraspPath_mLngSeq,
               _0RL_planGraspPath_mLngSeq_marshal_fn,
               _0RL_planGraspPath_mLngSeq_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, planGraspPath::LngSeq*& _sp)
{
  return _a >>= (const planGraspPath::LngSeq*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const planGraspPath::LngSeq*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_planGraspPath_mLngSeq,
                    _0RL_planGraspPath_mLngSeq_unmarshal_fn,
                    _0RL_planGraspPath_mLngSeq_marshal_fn,
                    _0RL_planGraspPath_mLngSeq_destructor_fn,
                    _v)) {
    _sp = (const planGraspPath::LngSeq*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_planGraspPath_mMotionState_marshal_fn(cdrStream& _s, void* _v)
{
  planGraspPath::MotionState* _p = (planGraspPath::MotionState*)_v;
  *_p >>= _s;
}
static void _0RL_planGraspPath_mMotionState_unmarshal_fn(cdrStream& _s, void*& _v)
{
  planGraspPath::MotionState* _p = (planGraspPath::MotionState*)_v;
  *_p <<= _s;
}

void operator<<=(::CORBA::Any& _a, planGraspPath::MotionState _s)
{
  _a.PR_insert(_0RL_tc_planGraspPath_mMotionState,
               _0RL_planGraspPath_mMotionState_marshal_fn,
               &_s);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, planGraspPath::MotionState& _s)
{
  return _a.PR_extract(_0RL_tc_planGraspPath_mMotionState,
                       _0RL_planGraspPath_mMotionState_unmarshal_fn,
                       &_s);
}

static void _0RL_planGraspPath_mObjectInputMode_marshal_fn(cdrStream& _s, void* _v)
{
  planGraspPath::ObjectInputMode* _p = (planGraspPath::ObjectInputMode*)_v;
  *_p >>= _s;
}
static void _0RL_planGraspPath_mObjectInputMode_unmarshal_fn(cdrStream& _s, void*& _v)
{
  planGraspPath::ObjectInputMode* _p = (planGraspPath::ObjectInputMode*)_v;
  *_p <<= _s;
}

void operator<<=(::CORBA::Any& _a, planGraspPath::ObjectInputMode _s)
{
  _a.PR_insert(_0RL_tc_planGraspPath_mObjectInputMode,
               _0RL_planGraspPath_mObjectInputMode_marshal_fn,
               &_s);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, planGraspPath::ObjectInputMode& _s)
{
  return _a.PR_extract(_0RL_tc_planGraspPath_mObjectInputMode,
                       _0RL_planGraspPath_mObjectInputMode_unmarshal_fn,
                       &_s);
}

static void _0RL_planGraspPath_mManipInfo_marshal_fn(cdrStream& _s, void* _v)
{
  planGraspPath::ManipInfo* _p = (planGraspPath::ManipInfo*)_v;
  *_p >>= _s;
}
static void _0RL_planGraspPath_mManipInfo_unmarshal_fn(cdrStream& _s, void*& _v)
{
  planGraspPath::ManipInfo* _p = new planGraspPath::ManipInfo;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_planGraspPath_mManipInfo_destructor_fn(void* _v)
{
  planGraspPath::ManipInfo* _p = (planGraspPath::ManipInfo*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const planGraspPath::ManipInfo& _s)
{
  planGraspPath::ManipInfo* _p = new planGraspPath::ManipInfo(_s);
  _a.PR_insert(_0RL_tc_planGraspPath_mManipInfo,
               _0RL_planGraspPath_mManipInfo_marshal_fn,
               _0RL_planGraspPath_mManipInfo_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, planGraspPath::ManipInfo* _sp)
{
  _a.PR_insert(_0RL_tc_planGraspPath_mManipInfo,
               _0RL_planGraspPath_mManipInfo_marshal_fn,
               _0RL_planGraspPath_mManipInfo_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, planGraspPath::ManipInfo*& _sp)
{
  return _a >>= (const planGraspPath::ManipInfo*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const planGraspPath::ManipInfo*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_planGraspPath_mManipInfo,
                    _0RL_planGraspPath_mManipInfo_unmarshal_fn,
                    _0RL_planGraspPath_mManipInfo_marshal_fn,
                    _0RL_planGraspPath_mManipInfo_destructor_fn,
                    _v)) {
    _sp = (const planGraspPath::ManipInfo*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_planGraspPath_mObjectInfo_marshal_fn(cdrStream& _s, void* _v)
{
  planGraspPath::ObjectInfo* _p = (planGraspPath::ObjectInfo*)_v;
  *_p >>= _s;
}
static void _0RL_planGraspPath_mObjectInfo_unmarshal_fn(cdrStream& _s, void*& _v)
{
  planGraspPath::ObjectInfo* _p = new planGraspPath::ObjectInfo;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_planGraspPath_mObjectInfo_destructor_fn(void* _v)
{
  planGraspPath::ObjectInfo* _p = (planGraspPath::ObjectInfo*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const planGraspPath::ObjectInfo& _s)
{
  planGraspPath::ObjectInfo* _p = new planGraspPath::ObjectInfo(_s);
  _a.PR_insert(_0RL_tc_planGraspPath_mObjectInfo,
               _0RL_planGraspPath_mObjectInfo_marshal_fn,
               _0RL_planGraspPath_mObjectInfo_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, planGraspPath::ObjectInfo* _sp)
{
  _a.PR_insert(_0RL_tc_planGraspPath_mObjectInfo,
               _0RL_planGraspPath_mObjectInfo_marshal_fn,
               _0RL_planGraspPath_mObjectInfo_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, planGraspPath::ObjectInfo*& _sp)
{
  return _a >>= (const planGraspPath::ObjectInfo*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const planGraspPath::ObjectInfo*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_planGraspPath_mObjectInfo,
                    _0RL_planGraspPath_mObjectInfo_unmarshal_fn,
                    _0RL_planGraspPath_mObjectInfo_marshal_fn,
                    _0RL_planGraspPath_mObjectInfo_destructor_fn,
                    _v)) {
    _sp = (const planGraspPath::ObjectInfo*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_planGraspPath_mManipInfoSeq_marshal_fn(cdrStream& _s, void* _v)
{
  planGraspPath::ManipInfoSeq* _p = (planGraspPath::ManipInfoSeq*)_v;
  *_p >>= _s;
}
static void _0RL_planGraspPath_mManipInfoSeq_unmarshal_fn(cdrStream& _s, void*& _v)
{
  planGraspPath::ManipInfoSeq* _p = new planGraspPath::ManipInfoSeq;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_planGraspPath_mManipInfoSeq_destructor_fn(void* _v)
{
  planGraspPath::ManipInfoSeq* _p = (planGraspPath::ManipInfoSeq*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const planGraspPath::ManipInfoSeq& _s)
{
  planGraspPath::ManipInfoSeq* _p = new planGraspPath::ManipInfoSeq(_s);
  _a.PR_insert(_0RL_tc_planGraspPath_mManipInfoSeq,
               _0RL_planGraspPath_mManipInfoSeq_marshal_fn,
               _0RL_planGraspPath_mManipInfoSeq_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, planGraspPath::ManipInfoSeq* _sp)
{
  _a.PR_insert(_0RL_tc_planGraspPath_mManipInfoSeq,
               _0RL_planGraspPath_mManipInfoSeq_marshal_fn,
               _0RL_planGraspPath_mManipInfoSeq_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, planGraspPath::ManipInfoSeq*& _sp)
{
  return _a >>= (const planGraspPath::ManipInfoSeq*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const planGraspPath::ManipInfoSeq*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_planGraspPath_mManipInfoSeq,
                    _0RL_planGraspPath_mManipInfoSeq_unmarshal_fn,
                    _0RL_planGraspPath_mManipInfoSeq_marshal_fn,
                    _0RL_planGraspPath_mManipInfoSeq_destructor_fn,
                    _v)) {
    _sp = (const planGraspPath::ManipInfoSeq*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_planGraspPath_marshal_fn(cdrStream& _s, void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  omniObjRef::_marshal(_o, _s);
}
static void _0RL_planGraspPath_unmarshal_fn(cdrStream& _s, void*& _v)
{
  omniObjRef* _o = omniObjRef::_unMarshal(planGraspPath::_PD_repoId, _s);
  _v = _o;
}
static void _0RL_planGraspPath_destructor_fn(void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  if (_o)
    omni::releaseObjRef(_o);
}

void operator<<=(::CORBA::Any& _a, planGraspPath_ptr _o)
{
  planGraspPath_ptr _no = planGraspPath::_duplicate(_o);
  _a.PR_insert(_tc_planGraspPath,
               _0RL_planGraspPath_marshal_fn,
               _0RL_planGraspPath_destructor_fn,
               _no->_PR_getobj());
}
void operator<<=(::CORBA::Any& _a, planGraspPath_ptr* _op)
{
  _a.PR_insert(_tc_planGraspPath,
               _0RL_planGraspPath_marshal_fn,
               _0RL_planGraspPath_destructor_fn,
               (*_op)->_PR_getobj());
  *_op = planGraspPath::_nil();
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, planGraspPath_ptr& _o)
{
  void* _v;
  if (_a.PR_extract(_tc_planGraspPath,
                    _0RL_planGraspPath_unmarshal_fn,
                    _0RL_planGraspPath_marshal_fn,
                    _0RL_planGraspPath_destructor_fn,
                    _v)) {
    omniObjRef* _r = (omniObjRef*)_v;
    if (_r)
      _o = (planGraspPath_ptr)_r->_ptrToObjRef(planGraspPath::_PD_repoId);
    else
      _o = planGraspPath::_nil();
    return 1;
  }
  return 0;
}


// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.

#include "GraspPathController.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_1;



void
planGraspPath::ManipInfo::operator>>= (cdrStream &_n) const
{
  (const DblSeq&) pos >>= _n;
  state >>= _n;
  _n.marshalBoolean(leftArm);
  _n.marshalBoolean(rightArm);
  _n.marshalBoolean(leftGripper);
  _n.marshalBoolean(rightGripper);
  _n.marshalBoolean(waist);

}

void
planGraspPath::ManipInfo::operator<<= (cdrStream &_n)
{
  (DblSeq&)pos <<= _n;
  (MotionState&)state <<= _n;
  leftArm = _n.unmarshalBoolean();
  rightArm = _n.unmarshalBoolean();
  leftGripper = _n.unmarshalBoolean();
  rightGripper = _n.unmarshalBoolean();
  waist = _n.unmarshalBoolean();

}

void
planGraspPath::ObjectInfo::operator>>= (cdrStream &_n) const
{
  (const DblSeq3&) pos >>= _n;
  (const DblSeq9&) ori >>= _n;
  objId >>= _n;
  _n.marshalString(tagId,0);
  tolerance >>= _n;

}

void
planGraspPath::ObjectInfo::operator<<= (cdrStream &_n)
{
  (DblSeq3&)pos <<= _n;
  (DblSeq9&)ori <<= _n;
  (ULONG&)objId <<= _n;
  tagId = _n.unmarshalString(0);
  (::CORBA::Double&)tolerance <<= _n;

}

planGraspPath_ptr planGraspPath_Helper::_nil() {
  return ::planGraspPath::_nil();
}

::CORBA::Boolean planGraspPath_Helper::is_nil(::planGraspPath_ptr p) {
  return ::CORBA::is_nil(p);

}

void planGraspPath_Helper::release(::planGraspPath_ptr p) {
  ::CORBA::release(p);
}

void planGraspPath_Helper::marshalObjRef(::planGraspPath_ptr obj, cdrStream& s) {
  ::planGraspPath::_marshalObjRef(obj, s);
}

planGraspPath_ptr planGraspPath_Helper::unmarshalObjRef(cdrStream& s) {
  return ::planGraspPath::_unmarshalObjRef(s);
}

void planGraspPath_Helper::duplicate(::planGraspPath_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

planGraspPath_ptr
planGraspPath::_duplicate(::planGraspPath_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

planGraspPath_ptr
planGraspPath::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


planGraspPath_ptr
planGraspPath::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

planGraspPath_ptr
planGraspPath::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_planGraspPath _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_planGraspPath* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_planGraspPath;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* planGraspPath::_PD_repoId = "IDL:planGraspPath:1.0";


_objref_planGraspPath::~_objref_planGraspPath() {
  
}


_objref_planGraspPath::_objref_planGraspPath(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::planGraspPath::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
_objref_planGraspPath::_ptrToObjRef(const char* id)
{
  if( id == ::planGraspPath::_PD_repoId )
    return (::planGraspPath_ptr) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::planGraspPath::_PD_repoId) )
    return (::planGraspPath_ptr) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  void_i_cunsigned_plong_i_cplanGraspPath_mDblSeq_i_cplanGraspPath_mDblSeq_i_cstring_i_cstring_i_cdouble_o_cplanGraspPath_mManipInfoSeq_o_cunsigned_plong
class _0RL_cd_3288855568e14b5e_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_3288855568e14b5e_00000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  planGraspPath::ULONG arg_0;
  planGraspPath::DblSeq_var arg_1_;
  const planGraspPath::DblSeq* arg_1;
  planGraspPath::DblSeq_var arg_2_;
  const planGraspPath::DblSeq* arg_2;
  ::CORBA::String_var arg_3_;
  const char* arg_3;
  ::CORBA::String_var arg_4_;
  const char* arg_4;
  ::CORBA::Double arg_5;
  planGraspPath::ManipInfoSeq_var arg_6;
  planGraspPath::ULONG arg_7;
};

void _0RL_cd_3288855568e14b5e_00000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  (const planGraspPath::DblSeq&) *arg_1 >>= _n;
  (const planGraspPath::DblSeq&) *arg_2 >>= _n;
  _n.marshalString(arg_3,0);
  _n.marshalString(arg_4,0);
  arg_5 >>= _n;

}

void _0RL_cd_3288855568e14b5e_00000000::unmarshalArguments(cdrStream& _n)
{
  (planGraspPath::ULONG&)arg_0 <<= _n;
  arg_1_ = new planGraspPath::DblSeq;
  (planGraspPath::DblSeq&)arg_1_ <<= _n;
  arg_1 = &arg_1_.in();
  arg_2_ = new planGraspPath::DblSeq;
  (planGraspPath::DblSeq&)arg_2_ <<= _n;
  arg_2 = &arg_2_.in();
  arg_3_ = _n.unmarshalString(0);
  arg_3 = arg_3_.in();
  arg_4_ = _n.unmarshalString(0);
  arg_4 = arg_4_.in();
  (::CORBA::Double&)arg_5 <<= _n;

}

void _0RL_cd_3288855568e14b5e_00000000::marshalReturnedValues(cdrStream& _n)
{
  (const planGraspPath::ManipInfoSeq&) arg_6 >>= _n;
  arg_7 >>= _n;

}

void _0RL_cd_3288855568e14b5e_00000000::unmarshalReturnedValues(cdrStream& _n)
{
  arg_6 = new planGraspPath::ManipInfoSeq;
  (planGraspPath::ManipInfoSeq&)arg_6 <<= _n;
  (planGraspPath::ULONG&)arg_7 <<= _n;

}

const char* const _0RL_cd_3288855568e14b5e_00000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_3288855568e14b5e_10000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3288855568e14b5e_00000000* tcd = (_0RL_cd_3288855568e14b5e_00000000*)cd;
  _impl_planGraspPath* impl = (_impl_planGraspPath*) svnt->_ptrToInterface(planGraspPath::_PD_repoId);
  impl->GraspPlanningStart(tcd->arg_0, *tcd->arg_1, *tcd->arg_2, tcd->arg_3, tcd->arg_4, tcd->arg_5, tcd->arg_6.out(), tcd->arg_7);


}

void _objref_planGraspPath::GraspPlanningStart(::planGraspPath::ULONG mode, const ::planGraspPath::DblSeq& begin, const ::planGraspPath::DblSeq& end, const char* robotId, const char* objectTagId, ::CORBA::Double resolution, ::planGraspPath::ManipInfoSeq_out trajectory, ::planGraspPath::ULONG& state)
{
  _0RL_cd_3288855568e14b5e_00000000 _call_desc(_0RL_lcfn_3288855568e14b5e_10000000, "GraspPlanningStart", 19);
  _call_desc.arg_0 = mode;
  _call_desc.arg_1 = &(::planGraspPath::DblSeq&) begin;
  _call_desc.arg_2 = &(::planGraspPath::DblSeq&) end;
  _call_desc.arg_3 = robotId;
  _call_desc.arg_4 = objectTagId;
  _call_desc.arg_5 = resolution;

  _invoke(_call_desc);
  trajectory = _call_desc.arg_6._retn();
  state = _call_desc.arg_7;


}
// Local call call-back function.
static void
_0RL_lcfn_3288855568e14b5e_20000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3288855568e14b5e_00000000* tcd = (_0RL_cd_3288855568e14b5e_00000000*)cd;
  _impl_planGraspPath* impl = (_impl_planGraspPath*) svnt->_ptrToInterface(planGraspPath::_PD_repoId);
  impl->ReleasePlanningStart(tcd->arg_0, *tcd->arg_1, *tcd->arg_2, tcd->arg_3, tcd->arg_4, tcd->arg_5, tcd->arg_6.out(), tcd->arg_7);


}

void _objref_planGraspPath::ReleasePlanningStart(::planGraspPath::ULONG mode, const ::planGraspPath::DblSeq& begin, const ::planGraspPath::DblSeq& end, const char* robotId, const char* objectTagId, ::CORBA::Double resolution, ::planGraspPath::ManipInfoSeq_out trajectory, ::planGraspPath::ULONG& state)
{
  _0RL_cd_3288855568e14b5e_00000000 _call_desc(_0RL_lcfn_3288855568e14b5e_20000000, "ReleasePlanningStart", 21);
  _call_desc.arg_0 = mode;
  _call_desc.arg_1 = &(::planGraspPath::DblSeq&) begin;
  _call_desc.arg_2 = &(::planGraspPath::DblSeq&) end;
  _call_desc.arg_3 = robotId;
  _call_desc.arg_4 = objectTagId;
  _call_desc.arg_5 = resolution;

  _invoke(_call_desc);
  trajectory = _call_desc.arg_6._retn();
  state = _call_desc.arg_7;


}
// Proxy call descriptor class. Mangled signature:
//  void_i_cplanGraspPath_mObjectInputMode_i_cplanGraspPath_mObjectInfo
class _0RL_cd_3288855568e14b5e_30000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_3288855568e14b5e_30000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  static const char* const _user_exns[];

  planGraspPath::ObjectInputMode arg_0;
  planGraspPath::ObjectInfo_var arg_1_;
  const planGraspPath::ObjectInfo* arg_1;
};

void _0RL_cd_3288855568e14b5e_30000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  (const planGraspPath::ObjectInfo&) *arg_1 >>= _n;

}

void _0RL_cd_3288855568e14b5e_30000000::unmarshalArguments(cdrStream& _n)
{
  (planGraspPath::ObjectInputMode&)arg_0 <<= _n;
  arg_1_ = new planGraspPath::ObjectInfo;
  (planGraspPath::ObjectInfo&)arg_1_ <<= _n;
  arg_1 = &arg_1_.in();

}

const char* const _0RL_cd_3288855568e14b5e_30000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_3288855568e14b5e_40000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_3288855568e14b5e_30000000* tcd = (_0RL_cd_3288855568e14b5e_30000000*)cd;
  _impl_planGraspPath* impl = (_impl_planGraspPath*) svnt->_ptrToInterface(planGraspPath::_PD_repoId);
  impl->SetStatusObject(tcd->arg_0, *tcd->arg_1);


}

void _objref_planGraspPath::SetStatusObject(::planGraspPath::ObjectInputMode mode, const ::planGraspPath::ObjectInfo& obj)
{
  _0RL_cd_3288855568e14b5e_30000000 _call_desc(_0RL_lcfn_3288855568e14b5e_40000000, "SetStatusObject", 16);
  _call_desc.arg_0 = mode;
  _call_desc.arg_1 = &(::planGraspPath::ObjectInfo&) obj;

  _invoke(_call_desc);



}
_pof_planGraspPath::~_pof_planGraspPath() {}


omniObjRef*
_pof_planGraspPath::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::_objref_planGraspPath(ior, id);
}


::CORBA::Boolean
_pof_planGraspPath::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::planGraspPath::_PD_repoId) )
    return 1;
  
  return 0;
}

const _pof_planGraspPath _the_pof_planGraspPath;

_impl_planGraspPath::~_impl_planGraspPath() {}


::CORBA::Boolean
_impl_planGraspPath::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "GraspPlanningStart") ) {

    _0RL_cd_3288855568e14b5e_00000000 _call_desc(_0RL_lcfn_3288855568e14b5e_10000000, "GraspPlanningStart", 19, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "ReleasePlanningStart") ) {

    _0RL_cd_3288855568e14b5e_00000000 _call_desc(_0RL_lcfn_3288855568e14b5e_20000000, "ReleasePlanningStart", 21, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "SetStatusObject") ) {

    _0RL_cd_3288855568e14b5e_30000000 _call_desc(_0RL_lcfn_3288855568e14b5e_40000000, "SetStatusObject", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
_impl_planGraspPath::_ptrToInterface(const char* id)
{
  if( id == ::planGraspPath::_PD_repoId )
    return (::_impl_planGraspPath*) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::planGraspPath::_PD_repoId) )
    return (::_impl_planGraspPath*) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
_impl_planGraspPath::_mostDerivedRepoId()
{
  return ::planGraspPath::_PD_repoId;
}

POA_planGraspPath::~POA_planGraspPath() {}

